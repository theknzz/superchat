{"version":3,"sources":["components/ChatMessage.js","components/NewMessageForm.js","store/actions/chatActions.js","components/ChatRoom.js","store/actions/authActions.js","components/Auth.js","components/Header.js","App.js","reportWebVitals.js","store/reducers/authReducer.js","store/reducers/chatReducer.js","store/reducers/rootReducer.js","config/firebaseConfig.js","index.js"],"names":["Container","styled","div","props","status","Avatar","img","MessageBalloon","ChatMessage","content","photoUrl","src","alt","Form","form","Input","input","Button","button","connect","state","isIn","auth","isAuthenticated","dispatch","send","message","getState","getFirebase","firebase","getFirestore","firestore","currentUser","uid","photoURL","collection","add","createAt","FieldValue","serverTimestamp","then","res","type","catch","err","console","error","sendMessage","marker","useState","setInput","useFirebase","onSubmit","e","preventDefault","log","target","current","scrollIntoView","behavior","disabled","onChange","value","accept","url","URL","createObjectURL","files","name","MessageBox","Warning","Marker","a","messages","ordered","update","user","useFirestoreConnect","orderBy","useEffect","list","map","id","useRef","ref","Links","authError","signIn","provider","GoogleAuthProvider","signInWithPopup","displayName","signOut","display","onClick","Navbar","Logo","h1","Header","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","authReducer","action","initialData","output","chatReducer","rootReducer","combineReducers","firebaseReducer","firestoreReducer","chat","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","middlewares","thunk","withExtraArgument","store","createStore","compose","applyMiddleware","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.229e504b.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from '@emotion/styled'\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: ${props => props.status==='sent'? 'row-reverse' : 'row'};\n    margin: 15px 5px;\n`\n\nconst Avatar = styled.img`\n    height: 35px;\n    width: 35px;\n    border-radius: 50%;\n    margin: 10px;\n`\n\nconst MessageBalloon = styled.div`\n    background-color: #0c4740;\n    padding: 10px 20px;\n    border-radius: 20px;\n    margin: 10px;\n    max-width: 600px;\n    overflow: auto;\n    word-wrap: break-word;\n    font-size: 15px;\n    color: white;\n    align-self: center;\n`\n\nconst ChatMessage = ({ content, photoUrl, status }) => {\n    return (\n        <Container status={status}>\n            <MessageBalloon>\n                <img src={content} alt={content}/>\n            </MessageBalloon>\n            <Avatar src={photoUrl} alt={'photo'}/>\n        </Container>\n    );\n}\nexport default ChatMessage","import React, {useState} from 'react'\nimport {sendMessage} from \"../store/actions/chatActions\";\nimport {connect} from 'react-redux'\nimport {useFirebase} from \"react-redux-firebase\";\nimport styled from \"@emotion/styled\";\n\nconst Form = styled.form`\n    display: flex;\n    height: 10vh;\n    background-color: lightgreen;\n    bottom: 0;\n    width: 100%;\n    position: fixed;\n    background-color: #262d31;\n`\n\nconst Input = styled.input`\n    flex: 1;\n    font-size: 1em;\n    background-color: #33383b;\n    color: white;\n    padding: 0px 20px;\n    border:none;\n    border-radius: 100px;\n    margin: 20px 0px;\n    margin-left: 40px;\n    &: focus {\n        outline: none;\n    }\n    &: disabled {\n        cursor: not-allowed;\n    }\n`\n\nconst Button = styled.button`\n    flex: 0 10vw;\n    color: lightgreen;\n    font-size: 2em;\n    background-color: #262d31;\n    border: none;\n    &: disabled {\n        opacity: 0.2;\n        color: lightgrey;\n        cursor: not-allowed;\n    }\n`\n\nconst NewMessageFrom = ({ send, isIn, marker }) => {\n\n    const [input, setInput] = useState('');\n    const auth = useFirebase().auth();\n\n    const sendMessage = () => {\n        console.log(input)\n        if (auth.currentUser) {\n            send(input);\n            setInput('');\n            marker.current.scrollIntoView({ behavior: 'smooth'});\n        }\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        console.log(e.target)\n        sendMessage()\n    }\n\n    const handleImage = e => {\n        const url = URL.createObjectURL(e.target.files[0]);\n        send(url)\n        marker.current.scrollIntoView({ behavior: 'smooth'});\n    }\n\n    return (\n        <>\n            <Form onSubmit={handleSubmit} disabled={!isIn}>\n                <Input\n                    type=\"text\"\n                    onChange={(e) => {\n                        console.log('input changed')\n                        setInput(e.target.value)\n                    }}\n                    value={input}\n                    disabled={!isIn}\n                />\n                <input type={'file'} accept=\"image/png, image/jpeg\" onChange={handleImage} name={'file'} />\n                <Button disabled={!input}>➡</Button>\n            </Form>\n        </>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isIn: state.auth.isAuthenticated,\n    };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        send: (message) => dispatch(sendMessage(message))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewMessageFrom)","export const sendMessage = (message) => {\n    return ( dispatch, getState, { getFirebase, getFirestore }) => {\n\n        const firebase = getFirebase();\n        const firestore = firebase.firestore();\n        const auth = firebase.auth();\n\n        const { uid, photoURL } = auth.currentUser;\n\n        firestore.collection('messages').add({\n            content: message,\n            uid,\n            photoURL,\n            createAt: firebase.firestore.FieldValue.serverTimestamp(),\n        }).then( res => {\n            dispatch({type: 'MESSAGE_SENT'});\n        }).catch( err => {\n            console.error(err);\n            dispatch({ type: 'MESSAGE_ERROR'})\n        });\n    }\n}","import React, { useEffect, useRef} from 'react'\nimport { useFirestoreConnect } from \"react-redux-firebase\";\nimport ChatMessage from './ChatMessage'\nimport { connect } from 'react-redux'\nimport { useFirebase } from 'react-redux-firebase'\nimport NewMessageFrom from \"./NewMessageForm\";\nimport styled from '@emotion/styled'\nimport { update } from '../store/actions/authActions'\n\nconst MessageBox = styled.div`\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    min-height: 80vh;\n    margin: 10vh 0 15vh;\n    overflow-y: auto;\n`\n\nconst Container = styled.div`\n    display: flex;\n    flex-flow: column wrap;\n`\n\nconst Warning = styled.div`\n    display: ${props => props.isIn ? 'none' : 'flex'};\n    color: white;\n    justify-content: center;\n    width: 100%;\n    position: fixed;\n    bottom: 10vh;\n    & > p {\n        background-color: #bbb;\n        border-radius: 25px;\n        padding: 15px;\n        opacity: 0.8;\n        font-size: 0.7em;\n    }\n`\n\nconst Marker = styled.a`\n`\n\nconst ChatRoom = (props) => {\n    const { messages, isIn, update } = props;\n\n    const auth = useFirebase().auth();\n\n    useFirestoreConnect([\n        { collection: 'messages', orderBy: ['createAt', 'asc']}\n    ])\n\n    useEffect( () => {\n        if (auth) {\n            update(auth.currentUser);\n        }\n    }, [messages])\n\n    const list = messages && messages.map(message => {\n        return (\n            <ChatMessage\n                key={message.id}\n                content={message.content}\n                photoUrl={message.photoURL}\n                status={auth.currentUser === null || auth.currentUser.uid !== message.uid ? 'received' : 'sent'}\n            />\n        );\n    })\n\n    const marker = useRef();\n\n    return (\n        <>\n            <Container>\n                <Warning isIn={isIn}><p>You need to sign in first!</p></Warning>\n                <MessageBox>\n                    {list}\n                    <Marker >  </Marker>\n                    <Marker ref={marker}/>\n                </MessageBox>\n                <NewMessageFrom marker={marker}/>\n            </Container>\n        </>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        messages: state.firestore.ordered.messages,\n        isIn: state.auth.isAuthenticated,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        update: (user) => dispatch(update(user))\n    };\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatRoom)","export const signIn = () => {\n    return ( dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n        const auth = firebase.auth();\n        const provider = new firebase.auth.GoogleAuthProvider();\n\n        auth.signInWithPopup(provider)\n            .then( res => {\n                dispatch({type: 'LOGIN_SUCCESS', user: auth.currentUser.displayName});\n            })\n            .catch( err => {\n                dispatch({type: 'LOGIN_ERROR'});\n                console.error('login error: ' + err.message);\n            });\n    }\n}\n\nexport const signOut = () => {\n    return ( dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n        const auth = firebase.auth();\n\n        auth.signOut().then( res => {\n            dispatch({type: 'LOGOUT_SUCCESS'})\n        }).catch( err => {\n            console.error(err)\n            dispatch({type: 'LOGOUT_ERROR'})\n        });\n    }\n}\n\nexport const update = (user) => {\n    return ( dispatch, getState, { getFirebase }) => {\n        dispatch({type: 'UPDATE', content: user})\n    }\n}","import React from 'react'\nimport { connect } from 'react-redux'\nimport {signIn, signOut} from '../store/actions/authActions'\nimport styled from '@emotion/styled'\n\nconst Links = styled.div`\n    display: flex;\n`\n\nconst Button = styled.button`\n    background-color: #2a2f32;\n    color: lightgrey;\n    font-size: 1.5em;\n    margin: 15px;\n    border: none;\n`\n\nconst Auth = ( props ) => {\n    const display = props.isIn ?\n        <Button onClick={() => props.signOut()}>Sign Out</Button> :\n        <Button onClick={() => props.signIn()}>Sign In</Button>;\n    return (\n        <Links>\n            {display}\n        </Links>\n    );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: () => dispatch(signIn()),\n        signOut: () => dispatch(signOut()),\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        message: state.auth.authError,\n        isIn: state.auth.isAuthenticated,\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth)","import React from 'react'\nimport styled from '@emotion/styled'\nimport Auth from \"./Auth\";\n\nconst Navbar = styled.div`\n    height: 10vh;\n    display: flex;\n    background-color: #2a2f32;\n    width: 100%;\n    box-sizing: border-box;\n    position: fixed;\n`\n\nconst Logo = styled.h1`\n    flex: 1;\n    margin: 20px;\n    color: orange;\n`\n\nconst Header = ( props ) => {\n    return(\n        <Navbar>\n            <Logo>⚛️🔥💬</Logo>\n            <Auth />\n        </Navbar>\n    );\n}\n\nexport default Header;","import React, {Fragment} from 'react'\nimport ChatRoom from './components/ChatRoom'\nimport Header from \"./components/Header\";\n\nconst App = (props) => {\n    return (\n        <Fragment>\n            <Header/>\n            <ChatRoom />\n        </Fragment>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState =  {\n    authError: '',\n    isAuthenticated: false,\n}\n\nconst authReducer = ( state = initialState, action) => {\n    switch (action.type) {\n        case 'LOGIN_SUCCESS':\n            return {\n                ...state,\n                authError: 'hello '+ action.user,\n                isAuthenticated: true,\n            };\n        case 'LOGIN_ERROR':\n            return {\n                ...state,\n                authError: 'Login failed',\n                isAuthenticated: false,\n            };\n        case 'LOGOUT_SUCCESS':\n            return {\n                ...state,\n                authError: null,\n                isAuthenticated: false,\n            };\n        case 'LOGOUT_ERROR':\n            return {\n                ...state,\n                authError: 'Logout failed',\n                isAuthenticated: true,\n            };\n        case 'UPDATE': {\n            if (action.content!==null) {\n                return {\n                    authError: null,\n                    isAuthenticated: true,\n                }\n            }\n            return state;\n        }\n        default:\n            return state;\n    }\n}\n\nexport default authReducer;","const initialData = {\n    output: '',\n}\n\nconst chatReducer = (state = initialData, action) => {\n    switch (action.type) {\n        case 'MESSAGE_SENT':\n            return {\n                ...state,\n                output: '',\n            }\n        case 'MESSAGE_ERROR':\n            return {\n                ...state,\n                output: 'Some problem while trying to send the message!'\n            }\n        default:\n            return state;\n    }\n}\n\nexport default chatReducer;","import { combineReducers } from \"redux\";\nimport { firebaseReducer } from \"react-redux-firebase\";\nimport { firestoreReducer } from 'redux-firestore'\nimport authReducer from \"./authReducer\";\nimport chatReducer from \"./chatReducer\";\n\nconst rootReducer = combineReducers({\n    firebase: firebaseReducer,\n    firestore: firestoreReducer,\n    auth: authReducer,\n    chat: chatReducer,\n})\n\nexport default rootReducer;","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCY2OoqbWde2rLJjutSIFHMfMeqrjjG7Xs\",\n    authDomain: \"my-superchat-knzz.firebaseapp.com\",\n    databaseURL: \"https://my-superchat-knzz.firebaseio.com\",\n    projectId: \"my-superchat-knzz\",\n    storageBucket: \"my-superchat-knzz.appspot.com\",\n    messagingSenderId: \"918033254761\",\n    appId: \"1:918033254761:web:29579e9e455036d70115f8\",\n    measurementId: \"G-HVPWZZGMGV\"\n};\n\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore();\n\nexport default firebase\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore, applyMiddleware, compose} from 'redux';\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport {getFirebase, ReactReduxFirebaseProvider} from 'react-redux-firebase'\nimport {getFirestore} from \"redux-firestore\";\nimport { createFirestoreInstance } from \"redux-firestore\";\nimport rootReducer from './store/reducers/rootReducer'\nimport firebase from './config/firebaseConfig'\nimport 'firebase/firestore'\n\nconst middlewares = [\n    thunk.withExtraArgument({ getFirebase, getFirestore })\n]\n\nconst rrfConfig = {\n    userProfile: 'users',\n    useFirestoreForProfile: true,\n}\n\nconst store = createStore(rootReducer,\n    compose(\n        applyMiddleware(...middlewares),\n    )\n);\n\nconst rrfProps = {\n    firebase,\n    config: rrfConfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance,\n}\n\nReactDOM.render(\n    <Provider store={store}>\n        <ReactReduxFirebaseProvider {...rrfProps}>\n            <React.StrictMode>\n                <App />\n            </React.StrictMode>\n        </ReactReduxFirebaseProvider>\n    </Provider>,\n    document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}