{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/joaquim/internship/superchat/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";function _templateObject4(){var data=_taggedTemplateLiteral([\"\\n\"]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n    display: \",\";\\n    color: white;\\n    justify-content: center;\\n    width: 100%;\\n    position: fixed;\\n    bottom: 10vh;\\n    & > p {\\n        background-color: #bbb;\\n        border-radius: 25px;\\n        padding: 15px;\\n        opacity: 0.8;\\n        font-size: 0.7em;\\n    }\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n    display: flex;\\n    flex-flow: column wrap;\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n    padding: 20px;\\n    display: flex;\\n    flex-direction: column;\\n    min-height: 80vh;\\n    margin: 10vh 0 15vh;\\n    overflow-y: auto;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useEffect,useRef}from'react';import{useFirestoreConnect}from\"react-redux-firebase\";import ChatMessage from'./ChatMessage';import{connect}from'react-redux';import{useFirebase}from'react-redux-firebase';import NewMessageFrom from\"./NewMessageForm\";import styled from'@emotion/styled';import{update as _update}from'../store/actions/authActions';var MessageBox=styled.div(_templateObject());var Container=styled.div(_templateObject2());var Warning=styled.div(_templateObject3(),function(props){return props.isIn?'none':'flex';});var Marker=styled.a(_templateObject4());var ChatRoom=function ChatRoom(props){var messages=props.messages,isIn=props.isIn,update=props.update;var auth=useFirebase().auth();useFirestoreConnect([{collection:'messages',orderBy:['createAt','asc']}]);useEffect(function(){if(auth){update(auth.currentUser);}},[messages]);var list=messages&&messages.map(function(message){return/*#__PURE__*/_jsx(ChatMessage,{content:message.content,photoUrl:message.photoURL,status:auth.currentUser===null||auth.currentUser.uid!==message.uid?'received':'sent'},message.id);});var marker=useRef();return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(Warning,{isIn:isIn,children:/*#__PURE__*/_jsx(\"p\",{children:\"You need to sign in first!\"})}),/*#__PURE__*/_jsxs(MessageBox,{children:[list,/*#__PURE__*/_jsx(Marker,{children:\"  \"}),/*#__PURE__*/_jsx(Marker,{ref:marker})]}),/*#__PURE__*/_jsx(NewMessageFrom,{marker:marker})]})});};var mapStateToProps=function mapStateToProps(state){return{messages:state.firestore.ordered.messages,isIn:state.auth.isAuthenticated};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{update:function update(user){return dispatch(_update(user));}};};export default connect(mapStateToProps,mapDispatchToProps)(ChatRoom);","map":{"version":3,"sources":["/home/joaquim/internship/superchat/src/components/ChatRoom.js"],"names":["React","useEffect","useRef","useFirestoreConnect","ChatMessage","connect","useFirebase","NewMessageFrom","styled","update","MessageBox","div","Container","Warning","props","isIn","Marker","a","ChatRoom","messages","auth","collection","orderBy","currentUser","list","map","message","content","photoURL","uid","id","marker","mapStateToProps","state","firestore","ordered","isAuthenticated","mapDispatchToProps","dispatch","user"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef} from 'react'\nimport { useFirestoreConnect } from \"react-redux-firebase\";\nimport ChatMessage from './ChatMessage'\nimport { connect } from 'react-redux'\nimport { useFirebase } from 'react-redux-firebase'\nimport NewMessageFrom from \"./NewMessageForm\";\nimport styled from '@emotion/styled'\nimport { update } from '../store/actions/authActions'\n\nconst MessageBox = styled.div`\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    min-height: 80vh;\n    margin: 10vh 0 15vh;\n    overflow-y: auto;\n`\n\nconst Container = styled.div`\n    display: flex;\n    flex-flow: column wrap;\n`\n\nconst Warning = styled.div`\n    display: ${props => props.isIn ? 'none' : 'flex'};\n    color: white;\n    justify-content: center;\n    width: 100%;\n    position: fixed;\n    bottom: 10vh;\n    & > p {\n        background-color: #bbb;\n        border-radius: 25px;\n        padding: 15px;\n        opacity: 0.8;\n        font-size: 0.7em;\n    }\n`\n\nconst Marker = styled.a`\n`\n\nconst ChatRoom = (props) => {\n    const { messages, isIn, update } = props;\n\n    const auth = useFirebase().auth();\n\n    useFirestoreConnect([\n        { collection: 'messages', orderBy: ['createAt', 'asc']}\n    ])\n\n    useEffect( () => {\n        if (auth) {\n            update(auth.currentUser);\n        }\n    }, [messages])\n\n    const list = messages && messages.map(message => {\n        return (\n            <ChatMessage\n                key={message.id}\n                content={message.content}\n                photoUrl={message.photoURL}\n                status={auth.currentUser === null || auth.currentUser.uid !== message.uid ? 'received' : 'sent'}\n            />\n        );\n    })\n\n    const marker = useRef();\n\n    return (\n        <>\n            <Container>\n                <Warning isIn={isIn}><p>You need to sign in first!</p></Warning>\n                <MessageBox>\n                    {list}\n                    <Marker >  </Marker>\n                    <Marker ref={marker}/>\n                </MessageBox>\n                <NewMessageFrom marker={marker}/>\n            </Container>\n        </>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        messages: state.firestore.ordered.messages,\n        isIn: state.auth.isAuthenticated,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        update: (user) => dispatch(update(user))\n    };\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatRoom)"]},"metadata":{},"sourceType":"module"}