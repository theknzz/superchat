{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/joaquim/internship/superchat/src/components/ChatRoom.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useRef } from 'react';\nimport { useFirestoreConnect } from \"react-redux-firebase\";\nimport ChatMessage from './ChatMessage';\nimport { connect } from 'react-redux';\nimport { useFirebase } from 'react-redux-firebase';\nimport { sendMessage } from '../store/actions/chatActions';\nimport styled from '@emotion/styled';\n\nconst ChatRoom = ({\n  messages,\n  send\n}) => {\n  _s();\n\n  const marker = useRef();\n  const [input, setInput] = useState('');\n  useFirestoreConnect([{\n    collection: 'messages',\n    orderBy: ['createAt', 'asc']\n  }]);\n  const auth = useFirebase().auth();\n  const list = messages && messages.map(message => {\n    return /*#__PURE__*/_jsxDEV(ChatMessage, {\n      content: message.content,\n      photoUrl: message.photoURL,\n      status: auth.currentUser.uid === message.uid ? 'sent' : 'received'\n    }, message.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: list\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChatRoom, \"SpekN1HjuF4jyreHqT2dA7TuhZY=\", false, function () {\n  return [useFirestoreConnect, useFirebase];\n});\n\n_c = ChatRoom;\n\nconst mapStateToProps = state => {\n  return {\n    messages: state.firestore.ordered.messages\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    send: message => dispatch(sendMessage(message))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatRoom);\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"sources":["/home/joaquim/internship/superchat/src/components/ChatRoom.js"],"names":["React","Fragment","useState","useRef","useFirestoreConnect","ChatMessage","connect","useFirebase","sendMessage","styled","ChatRoom","messages","send","marker","input","setInput","collection","orderBy","auth","list","map","message","content","photoURL","currentUser","uid","id","mapStateToProps","state","firestore","ordered","mapDispatchToProps","dispatch"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,QAAzB,EAAmCC,MAAnC,QAAgD,OAAhD;AACA,SAASC,mBAAT,QAAoC,sBAApC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,WAAT,QAA4B,8BAA5B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAIA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAwB;AAAA;;AACrC,QAAMC,MAAM,GAAGV,MAAM,EAArB;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AAEAE,EAAAA,mBAAmB,CAAC,CAChB;AAAEY,IAAAA,UAAU,EAAE,UAAd;AAA0BC,IAAAA,OAAO,EAAE,CAAC,UAAD,EAAa,KAAb;AAAnC,GADgB,CAAD,CAAnB;AAIA,QAAMC,IAAI,GAAGX,WAAW,GAAGW,IAAd,EAAb;AAEA,QAAMC,IAAI,GAAGR,QAAQ,IAAIA,QAAQ,CAACS,GAAT,CAAaC,OAAO,IAAI;AAC7C,wBACI,QAAC,WAAD;AAA8B,MAAA,OAAO,EAAEA,OAAO,CAACC,OAA/C;AAAwD,MAAA,QAAQ,EAAED,OAAO,CAACE,QAA1E;AAAoF,MAAA,MAAM,EAAEL,IAAI,CAACM,WAAL,CAAiBC,GAAjB,KAAyBJ,OAAO,CAACI,GAAjC,GAAuC,MAAvC,GAA+C;AAA3I,OAAkBJ,OAAO,CAACK,EAA1B;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GAJwB,CAAzB;AAMA,sBACI,QAAC,QAAD;AAAA,cACKP;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CArBD;;GAAMT,Q;UAIFN,mB,EAIaG,W;;;KARXG,Q;;AAuBN,MAAMiB,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHjB,IAAAA,QAAQ,EAAEiB,KAAK,CAACC,SAAN,CAAgBC,OAAhB,CAAwBnB;AAD/B,GAAP;AAGH,CAJD;;AAMA,MAAMoB,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHpB,IAAAA,IAAI,EAAGS,OAAD,IAAaW,QAAQ,CAACxB,WAAW,CAACa,OAAD,CAAZ;AADxB,GAAP;AAGH,CAJD;;AAMA,eAAef,OAAO,CAACqB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CrB,QAA7C,CAAf","sourcesContent":["import React, {Fragment, useState, useRef} from 'react'\nimport { useFirestoreConnect } from \"react-redux-firebase\";\nimport ChatMessage from './ChatMessage'\nimport { connect } from 'react-redux'\nimport { useFirebase } from 'react-redux-firebase'\nimport { sendMessage } from '../store/actions/chatActions'\nimport styled from '@emotion/styled'\n\n\n\nconst ChatRoom = ({ messages, send }) => {\n    const marker = useRef();\n    const [input, setInput] = useState('');\n\n    useFirestoreConnect([\n        { collection: 'messages', orderBy: ['createAt', 'asc']}\n    ])\n\n    const auth = useFirebase().auth();\n\n    const list = messages && messages.map(message => {\n        return (\n            <ChatMessage key={message.id} content={message.content} photoUrl={message.photoURL} status={auth.currentUser.uid === message.uid ? 'sent': 'received'}/>\n        );\n    })\n\n    return (\n        <Fragment>\n            {list}\n        </Fragment>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        messages: state.firestore.ordered.messages,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        send: (message) => dispatch(sendMessage(message))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatRoom)"]},"metadata":{},"sourceType":"module"}