{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/joaquim/internship/superchat/src/components/ChatRoom.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport { useFirestoreConnect } from \"react-redux-firebase\";\nimport ChatMessage from './ChatMessage';\nimport { connect } from 'react-redux';\nimport { useFirebase } from 'react-redux-firebase';\nimport { sendMessage } from '../store/actions/chatActions';\n\nconst ChatRoom = ({\n  messages\n}) => {\n  _s();\n\n  const [input, setInput] = useState('');\n  useFirestoreConnect([{\n    collection: 'messages'\n  }]);\n  const auth = useFirebase().auth();\n  const list = messages && messages.map(message => {\n    return /*#__PURE__*/_jsxDEV(ChatMessage, {\n      content: message.content,\n      status: auth.currentUser === message.uid ? 'sent' : 'received'\n    }, message.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ChatRoom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), list, /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setInput(e.target.value),\n        value: input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"click me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChatRoom, \"59smcUQdKOK2E9D2AxKNCf2a+2o=\", false, function () {\n  return [useFirestoreConnect, useFirebase];\n});\n\n_c = ChatRoom;\n\nconst mapStateToProps = state => {\n  return {\n    messages: state.firestore.ordered.messages\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    send: () => dispatch()\n  };\n};\n\nexport default connect(mapStateToProps)(ChatRoom);\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"sources":["/home/joaquim/internship/superchat/src/components/ChatRoom.js"],"names":["React","Fragment","useState","useFirestoreConnect","ChatMessage","connect","useFirebase","sendMessage","ChatRoom","messages","input","setInput","collection","auth","list","map","message","content","currentUser","uid","id","handleSubmit","e","preventDefault","target","value","mapStateToProps","state","firestore","ordered","mapDispatchToProps","dispatch","send"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,SAASC,mBAAT,QAAoC,sBAApC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,WAAT,QAA4B,8BAA5B;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAE/B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,mBAAmB,CAAC,CAChB;AAAES,IAAAA,UAAU,EAAE;AAAd,GADgB,CAAD,CAAnB;AAIA,QAAMC,IAAI,GAAGP,WAAW,GAAGO,IAAd,EAAb;AAEA,QAAMC,IAAI,GAAGL,QAAQ,IAAIA,QAAQ,CAACM,GAAT,CAAaC,OAAO,IAAI;AAC7C,wBACI,QAAC,WAAD;AAA8B,MAAA,OAAO,EAAEA,OAAO,CAACC,OAA/C;AAAwD,MAAA,MAAM,EAAEJ,IAAI,CAACK,WAAL,KAAqBF,OAAO,CAACG,GAA7B,GAAmC,MAAnC,GAA2C;AAA3G,OAAkBH,OAAO,CAACI,EAA1B;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GAJwB,CAAzB;;AAMA,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACC,cAAF;AAEH,GAHD;;AAKA,sBACI,QAAC,QAAD;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKT,IAFL,eAGI;AAAM,MAAA,QAAQ,EAAEO,YAAhB;AAAA,8BACI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,QAAQ,EAAGC,CAAD,IAAOX,QAAQ,CAACW,CAAC,CAACE,MAAF,CAASC,KAAV,CAF7B;AAGI,QAAA,KAAK,EAAEf;AAHX;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAnCD;;GAAMF,Q;UAIFL,mB,EAIaG,W;;;KARXE,Q;;AAqCN,MAAMkB,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHlB,IAAAA,QAAQ,EAAEkB,KAAK,CAACC,SAAN,CAAgBC,OAAhB,CAAwBpB;AAD/B,GAAP;AAGH,CAJD;;AAMA,MAAMqB,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHC,IAAAA,IAAI,EAAE,MAAMD,QAAQ;AADjB,GAAP;AAGH,CAJD;;AAMA,eAAe1B,OAAO,CAACqB,eAAD,CAAP,CAAyBlB,QAAzB,CAAf","sourcesContent":["import React, {Fragment, useState} from 'react'\nimport { useFirestoreConnect } from \"react-redux-firebase\";\nimport ChatMessage from './ChatMessage'\nimport { connect } from 'react-redux'\nimport { useFirebase } from 'react-redux-firebase'\nimport { sendMessage } from '../store/actions/chatActions'\n\nconst ChatRoom = ({ messages }) => {\n\n    const [input, setInput] = useState('');\n\n    useFirestoreConnect([\n        { collection: 'messages'}\n    ])\n\n    const auth = useFirebase().auth();\n\n    const list = messages && messages.map(message => {\n        return (\n            <ChatMessage key={message.id} content={message.content} status={auth.currentUser === message.uid ? 'sent': 'received'}/>\n        );\n    })\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n    }\n\n    return (\n        <Fragment>\n            <h1>ChatRoom</h1>\n            {list}\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    onChange={(e) => setInput(e.target.value)}\n                    value={input}\n                />\n                <button>click me</button>\n            </form>\n        </Fragment>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        messages: state.firestore.ordered.messages,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        send: () => dispatch()\n    }\n}\n\nexport default connect(mapStateToProps)(ChatRoom)"]},"metadata":{},"sourceType":"module"}