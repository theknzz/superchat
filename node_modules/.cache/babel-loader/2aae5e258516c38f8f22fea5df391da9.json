{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/joaquim/internship/superchat/src/components/ChatRoom.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useRef } from 'react';\nimport { useFirestoreConnect } from \"react-redux-firebase\";\nimport ChatMessage from './ChatMessage';\nimport { connect } from 'react-redux';\nimport { useFirebase } from 'react-redux-firebase';\nimport NewMessageFrom from \"./NewMessageForm\";\nimport styled from '@emotion/styled';\nconst Container = styled.div`\n    padding: 20px;\n`;\n_c = Container;\nconst Warning = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: white;\n`;\n_c2 = Warning;\n\nconst ChatRoom = ({\n  messages,\n  isIn\n}) => {\n  _s();\n\n  useFirestoreConnect([{\n    collection: 'messages',\n    orderBy: ['createAt', 'asc']\n  }]);\n  const auth = useFirebase().auth();\n  const list = messages && messages.map(message => {\n    return /*#__PURE__*/_jsxDEV(ChatMessage, {\n      content: message.content,\n      photoUrl: message.photoURL,\n      status: auth.currentUser.uid === message.uid ? 'sent' : 'received'\n    }, message.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: list\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), isIn ? /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 22\n    }, this) : /*#__PURE__*/_jsxDEV(Warning, {\n      children: \"You need to sign in first!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(NewMessageFrom, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ChatRoom, \"xduGAeV5H89J2LDVHucHC86scjU=\", false, function () {\n  return [useFirestoreConnect, useFirebase];\n});\n\n_c3 = ChatRoom;\n\nconst mapStateToProps = state => {\n  return {\n    messages: state.firestore.ordered.messages,\n    isIn: state.auth.isAuthenticated\n  };\n};\n\nexport default connect(mapStateToProps)(ChatRoom);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Warning\");\n$RefreshReg$(_c3, \"ChatRoom\");","map":{"version":3,"sources":["/home/joaquim/internship/superchat/src/components/ChatRoom.js"],"names":["React","Fragment","useState","useRef","useFirestoreConnect","ChatMessage","connect","useFirebase","NewMessageFrom","styled","Container","div","Warning","ChatRoom","messages","isIn","collection","orderBy","auth","list","map","message","content","photoURL","currentUser","uid","id","mapStateToProps","state","firestore","ordered","isAuthenticated"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,QAAzB,EAAmCC,MAAnC,QAAgD,OAAhD;AACA,SAASC,mBAAT,QAAoC,sBAApC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAGA,MAAMC,SAAS,GAAGD,MAAM,CAACE,GAAI;AAC7B;AACA,CAFA;KAAMD,S;AAIN,MAAME,OAAO,GAAGH,MAAM,CAACE,GAAI;AAC3B;AACA;AACA;AACA;AACA,CALA;MAAMC,O;;AAON,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAwB;AAAA;;AAErCX,EAAAA,mBAAmB,CAAC,CAChB;AAAEY,IAAAA,UAAU,EAAE,UAAd;AAA0BC,IAAAA,OAAO,EAAE,CAAC,UAAD,EAAa,KAAb;AAAnC,GADgB,CAAD,CAAnB;AAIA,QAAMC,IAAI,GAAGX,WAAW,GAAGW,IAAd,EAAb;AAEA,QAAMC,IAAI,GAAGL,QAAQ,IAAIA,QAAQ,CAACM,GAAT,CAAaC,OAAO,IAAI;AAC7C,wBACI,QAAC,WAAD;AAA8B,MAAA,OAAO,EAAEA,OAAO,CAACC,OAA/C;AAAwD,MAAA,QAAQ,EAAED,OAAO,CAACE,QAA1E;AAAoF,MAAA,MAAM,EAAEL,IAAI,CAACM,WAAL,CAAiBC,GAAjB,KAAyBJ,OAAO,CAACI,GAAjC,GAAuC,MAAvC,GAA+C;AAA3I,OAAkBJ,OAAO,CAACK,EAA1B;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GAJwB,CAAzB;AAMA,sBACI;AAAA,4BACI,QAAC,SAAD;AAAA,gBACKP;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,EAIMJ,IAAI,gBAAG;AAAA;AAAA;AAAA;AAAA,YAAH,gBAAU,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJpB,eAKI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA,kBADJ;AASH,CAvBD;;GAAMF,Q;UAEFT,mB,EAIaG,W;;;MANXM,Q;;AAyBN,MAAMc,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHd,IAAAA,QAAQ,EAAEc,KAAK,CAACC,SAAN,CAAgBC,OAAhB,CAAwBhB,QAD/B;AAEHC,IAAAA,IAAI,EAAEa,KAAK,CAACV,IAAN,CAAWa;AAFd,GAAP;AAIH,CALD;;AAQA,eAAezB,OAAO,CAACqB,eAAD,CAAP,CAAyBd,QAAzB,CAAf","sourcesContent":["import React, {Fragment, useState, useRef} from 'react'\nimport { useFirestoreConnect } from \"react-redux-firebase\";\nimport ChatMessage from './ChatMessage'\nimport { connect } from 'react-redux'\nimport { useFirebase } from 'react-redux-firebase'\nimport NewMessageFrom from \"./NewMessageForm\";\nimport styled from '@emotion/styled'\n\n\nconst Container = styled.div`\n    padding: 20px;\n`\n\nconst Warning = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    color: white;\n`\n\nconst ChatRoom = ({ messages, isIn }) => {\n\n    useFirestoreConnect([\n        { collection: 'messages', orderBy: ['createAt', 'asc']}\n    ])\n\n    const auth = useFirebase().auth();\n\n    const list = messages && messages.map(message => {\n        return (\n            <ChatMessage key={message.id} content={message.content} photoUrl={message.photoURL} status={auth.currentUser.uid === message.uid ? 'sent': 'received'}/>\n        );\n    })\n\n    return (\n        <>\n            <Container>\n                {list}\n            </Container>\n            { isIn ? <p/> : <Warning>You need to sign in first!</Warning>}\n            <NewMessageFrom/>\n        </>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        messages: state.firestore.ordered.messages,\n        isIn: state.auth.isAuthenticated,\n    }\n}\n\n\nexport default connect(mapStateToProps)(ChatRoom)"]},"metadata":{},"sourceType":"module"}