{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/joaquim/internship/superchat/src/components/SignIn.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nconst SignIn = () => {\n  _s();\n\n  const firebase = useFirebase();\n  const auth = firebase.auth();\n  const provider = new firebase.auth.GoogleAuthProvider();\n\n  const signInWithGoogle = () => {\n    auth.signInWithPopup(provider).then(res => console.log(res)).catch(err => console.error(err.message));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: signInWithGoogle,\n    children: \"Sign in with Google\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignIn, \"yjAlKaaZqll99guBIEPLHIdVU4A=\", true);\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/home/joaquim/internship/superchat/src/components/SignIn.js"],"names":["React","connect","SignIn","firebase","useFirebase","auth","provider","GoogleAuthProvider","signInWithGoogle","signInWithPopup","then","res","console","log","catch","err","error","message"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAEjB,QAAMC,QAAQ,GAAGC,WAAW,EAA5B;AACA,QAAMC,IAAI,GAAGF,QAAQ,CAACE,IAAT,EAAb;AACA,QAAMC,QAAQ,GAAG,IAAIH,QAAQ,CAACE,IAAT,CAAcE,kBAAlB,EAAjB;;AACA,QAAMC,gBAAgB,GAAG,MAAM;AAC3BH,IAAAA,IAAI,CAACI,eAAL,CAAqBH,QAArB,EACKI,IADL,CACWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CADlB,EAEKG,KAFL,CAEYC,GAAG,IAAIH,OAAO,CAACI,KAAR,CAAcD,GAAG,CAACE,OAAlB,CAFnB;AAGH,GAJD;;AAMA,sBACI;AAAQ,IAAA,OAAO,EAAET,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAdD;;GAAMN,M;;KAAAA,M;AAgBN,eAAeA,MAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\n\nconst SignIn = () => {\n\n    const firebase = useFirebase();\n    const auth = firebase.auth();\n    const provider = new firebase.auth.GoogleAuthProvider();\n    const signInWithGoogle = () => {\n        auth.signInWithPopup(provider)\n            .then( res => console.log(res))\n            .catch( err => console.error(err.message));\n    }\n\n    return (\n        <button onClick={signInWithGoogle}>Sign in with Google</button>\n    );\n}\n\nexport default SignIn"]},"metadata":{},"sourceType":"module"}