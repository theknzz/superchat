{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/joaquim/internship/superchat/src/components/ChatRoom.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useRef } from 'react';\nimport { useFirestoreConnect } from \"react-redux-firebase\";\nimport ChatMessage from './ChatMessage';\nimport { connect } from 'react-redux';\nimport { useFirebase } from 'react-redux-firebase';\nimport { sendMessage } from '../store/actions/chatActions';\n\nconst ChatRoom = ({\n  messages,\n  send\n}) => {\n  _s();\n\n  const marker = useRef();\n  const [input, setInput] = useState('');\n  useFirestoreConnect([{\n    collection: 'messages',\n    orderBy: ['createAt', 'asc']\n  }]);\n  const auth = useFirebase().auth();\n  const list = messages && messages.map(message => {\n    return /*#__PURE__*/_jsxDEV(ChatMessage, {\n      content: message.content,\n      photoUrl: message.photoURL,\n      status: auth.currentUser.uid === message.uid ? 'sent' : 'received'\n    }, message.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (auth.currentUser) {\n      send(input);\n      setInput('');\n    }\n\n    window.scrollTo(0, 100);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'container',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\uD83D\\uDCAC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-room\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrapper\",\n          children: list\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => {\n            setInput(e.target.value);\n          },\n          value: input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: !input,\n          children: \"\\u27A1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: marker\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChatRoom, \"SpekN1HjuF4jyreHqT2dA7TuhZY=\", false, function () {\n  return [useFirestoreConnect, useFirebase];\n});\n\n_c = ChatRoom;\n\nconst mapStateToProps = state => {\n  return {\n    messages: state.firestore.ordered.messages\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    send: message => dispatch(sendMessage(message))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatRoom);\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"sources":["/home/joaquim/internship/superchat/src/components/ChatRoom.js"],"names":["React","Fragment","useState","useRef","useFirestoreConnect","ChatMessage","connect","useFirebase","sendMessage","ChatRoom","messages","send","marker","input","setInput","collection","orderBy","auth","list","map","message","content","photoURL","currentUser","uid","id","handleSubmit","e","preventDefault","window","scrollTo","target","value","mapStateToProps","state","firestore","ordered","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Fragment, useState, useRef} from 'react'\nimport { useFirestoreConnect } from \"react-redux-firebase\";\nimport ChatMessage from './ChatMessage'\nimport { connect } from 'react-redux'\nimport { useFirebase } from 'react-redux-firebase'\nimport { sendMessage } from '../store/actions/chatActions'\n\nconst ChatRoom = ({ messages, send }) => {\n    const marker = useRef();\n    const [input, setInput] = useState('');\n\n    useFirestoreConnect([\n        { collection: 'messages', orderBy: ['createAt', 'asc']}\n    ])\n\n    const auth = useFirebase().auth();\n\n    const list = messages && messages.map(message => {\n        return (\n            <ChatMessage key={message.id} content={message.content} photoUrl={message.photoURL} status={auth.currentUser.uid === message.uid ? 'sent': 'received'}/>\n        );\n    })\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        if (auth.currentUser) {\n            send(input);\n            setInput('');\n        }\n        window.scrollTo(0, 100)\n    }\n\n    return (\n        <Fragment>\n            <div className={'container'}>\n                <div className=\"title\">\n                    <h1>ðŸ’¬</h1>\n                </div>\n                <div className=\"message-room\">\n                    <div className=\"wrapper\">\n                        {list}\n                    </div>\n                </div>\n                <form onSubmit={handleSubmit}>\n                    <input\n                        type=\"text\"\n                        onChange={(e) => {\n                            setInput(e.target.value)\n                        }}\n                        value={input}\n                    />\n                    <button disabled={!input}>âž¡</button>\n                </form>\n                <div ref={marker}/>\n            </div>\n\n        </Fragment>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        messages: state.firestore.ordered.messages,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        send: (message) => dispatch(sendMessage(message))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatRoom)"]},"metadata":{},"sourceType":"module"}