{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/joaquim/internship/superchat/src/components/ChatRoom.js\";\nimport React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from 'redux';\n\nconst ChatRoom = props => {\n  const {\n    messages\n  } = props;\n  console.log(props);\n  const list = messages && messages.map(message => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message.content\n    }, message.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ChatRoom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), list]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ChatRoom;\n\nconst mapStateToProps = state => {\n  return {\n    messages: state.firestore.ordered.messages\n  };\n};\n\nexport default compose(connect(mapStateToProps), firestoreConnect([{\n  collection: 'messages',\n  orderBy: ['createdAt', 'desc']\n}]))(ChatRoom);\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"sources":["/home/joaquim/internship/superchat/src/components/ChatRoom.js"],"names":["React","Fragment","connect","firestoreConnect","compose","ChatRoom","props","messages","console","log","list","map","message","content","id","mapStateToProps","state","firestore","ordered","collection","orderBy"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB;;AAEA,MAAMC,QAAQ,GAAKC,KAAF,IAAa;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAeD,KAArB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,QAAMI,IAAI,GAAGH,QAAQ,IAAIA,QAAQ,CAACI,GAAT,CAAaC,OAAO,IAAI;AAC7C,wBACI;AAAA,gBAAsBA,OAAO,CAACC;AAA9B,OAAQD,OAAO,CAACE,EAAhB;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GAJwB,CAAzB;AAKA,sBACI,QAAC,QAAD;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKJ,IAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAdD;;KAAML,Q;;AAgBN,MAAMU,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHT,IAAAA,QAAQ,EAAES,KAAK,CAACC,SAAN,CAAgBC,OAAhB,CAAwBX;AAD/B,GAAP;AAGH,CAJD;;AAMA,eAAeH,OAAO,CAClBF,OAAO,CAACa,eAAD,CADW,EAElBZ,gBAAgB,CAAC,CACb;AAAEgB,EAAAA,UAAU,EAAE,UAAd;AAA0BC,EAAAA,OAAO,EAAE,CAAC,WAAD,EAAc,MAAd;AAAnC,CADa,CAAD,CAFE,CAAP,CAKbf,QALa,CAAf","sourcesContent":["import React, {Fragment} from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from 'redux'\n\nconst ChatRoom = ( props ) => {\n    const { messages } = props;\n    console.log(props)\n    const list = messages && messages.map(message => {\n        return (\n            <p key={message.id}>{ message.content }</p>\n        );\n    })\n    return (\n        <Fragment>\n            <h1>ChatRoom</h1>\n            {list}\n        </Fragment>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        messages: state.firestore.ordered.messages,\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'messages', orderBy: ['createdAt', 'desc'] },\n    ])\n)(ChatRoom)"]},"metadata":{},"sourceType":"module"}