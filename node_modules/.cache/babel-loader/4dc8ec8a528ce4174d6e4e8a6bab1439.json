{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/joaquim/internship/superchat/src/components/ChatRoom.js\";\nimport React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { useSelector } from \"react-redux\";\nimport { useFirestoreConnect } from \"react-redux-firebase\";\n\nconst ChatRoom = ({\n  messages\n}) => {\n  // useFirestoreConnect([\n  //     { collection: 'messages'}\n  // ])\n  // const messages = useSelector( (state) => state.firestore.ordered.messages)\n  //\n  const list = messages && messages.map(message => {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message.content\n    }, message.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ChatRoom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), list]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ChatRoom;\n\nconst mapStateToProps = state => {\n  return {\n    messages: state.firestore.ordered.messages\n  };\n};\n\nexport default connect(mapStateToProps)(ChatRoom);\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"sources":["/home/joaquim/internship/superchat/src/components/ChatRoom.js"],"names":["React","Fragment","connect","useSelector","useFirestoreConnect","ChatRoom","messages","list","map","message","content","id","mapStateToProps","state","firestore","ordered"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,mBAAT,QAAoC,sBAApC;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAE/B;AACA;AACA;AAEA;AACA;AACA,QAAMC,IAAI,GAAGD,QAAQ,IAAIA,QAAQ,CAACE,GAAT,CAAaC,OAAO,IAAI;AAC7C,wBACI;AAAA,gBAAsBA,OAAO,CAACC;AAA9B,OAAQD,OAAO,CAACE,EAAhB;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GAJwB,CAAzB;AAMA,sBACI,QAAC,QAAD;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKJ,IAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CApBD;;KAAMF,Q;;AAsBN,MAAMO,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHP,IAAAA,QAAQ,EAAEO,KAAK,CAACC,SAAN,CAAgBC,OAAhB,CAAwBT;AAD/B,GAAP;AAGH,CAJD;;AAMA,eAAeJ,OAAO,CAACU,eAAD,CAAP,CAAyBP,QAAzB,CAAf","sourcesContent":["import React, {Fragment} from 'react'\nimport { connect } from 'react-redux'\nimport { useSelector } from \"react-redux\";\nimport { useFirestoreConnect } from \"react-redux-firebase\";\n\nconst ChatRoom = ({ messages }) => {\n\n    // useFirestoreConnect([\n    //     { collection: 'messages'}\n    // ])\n\n    // const messages = useSelector( (state) => state.firestore.ordered.messages)\n    //\n    const list = messages && messages.map(message => {\n        return (\n            <p key={message.id}>{ message.content }</p>\n        );\n    })\n\n    return (\n        <Fragment>\n            <h1>ChatRoom</h1>\n            {list}\n        </Fragment>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        messages: state.firestore.ordered.messages,\n    }\n}\n\nexport default connect(mapStateToProps)(ChatRoom)"]},"metadata":{},"sourceType":"module"}