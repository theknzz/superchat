{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/joaquim/internship/superchat/src/components/ChatRoom.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from 'redux';\nimport { useSelector } from \"react-redux\";\nimport { useFirestoreConnect } from \"react-redux-firebase\";\n\nconst ChatRoom = props => {\n  _s();\n\n  // const { messages } = props;\n  // console.log(props)\n  //\n  // const list = messages && messages.map(message => {\n  //     return (\n  //         <p key={message.id}>{ message.content }</p>\n  //     );\n  // })\n  useFirestoreConnect([{\n    collection: 'messages'\n  }]);\n  const list = useSelector(state => state.firestore.ordered.messages);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ChatRoom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), list]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChatRoom, \"2ReGQhJxI+dWXZ0+UMsYAhWdpAI=\", false, function () {\n  return [useFirestoreConnect, useSelector];\n});\n\n_c = ChatRoom;\n\nconst mapStateToProps = state => {\n  return {\n    messages: state.firestore.ordered.messages\n  };\n};\n\nexport default compose(connect(mapStateToProps), firestoreConnect([{\n  collection: 'messages',\n  orderBy: ['createdAt', 'desc']\n}]))(ChatRoom);\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"sources":["/home/joaquim/internship/superchat/src/components/ChatRoom.js"],"names":["React","Fragment","connect","firestoreConnect","compose","useSelector","useFirestoreConnect","ChatRoom","props","collection","list","state","firestore","ordered","messages","mapStateToProps","orderBy"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,mBAAT,QAAoC,sBAApC;;AAEA,MAAMC,QAAQ,GAAKC,KAAF,IAAa;AAAA;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAF,EAAAA,mBAAmB,CAAC,CAChB;AAAEG,IAAAA,UAAU,EAAE;AAAd,GADgB,CAAD,CAAnB;AAIA,QAAMC,IAAI,GAAGL,WAAW,CAAGM,KAAD,IAAWA,KAAK,CAACC,SAAN,CAAgBC,OAAhB,CAAwBC,QAArC,CAAxB;AAEA,sBACI,QAAC,QAAD;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKJ,IAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAvBD;;GAAMH,Q;UAWFD,mB,EAIaD,W;;;KAfXE,Q;;AAyBN,MAAMQ,eAAe,GAAIJ,KAAD,IAAW;AAC/B,SAAO;AACHG,IAAAA,QAAQ,EAAEH,KAAK,CAACC,SAAN,CAAgBC,OAAhB,CAAwBC;AAD/B,GAAP;AAGH,CAJD;;AAMA,eAAeV,OAAO,CAClBF,OAAO,CAACa,eAAD,CADW,EAElBZ,gBAAgB,CAAC,CACb;AAAEM,EAAAA,UAAU,EAAE,UAAd;AAA0BO,EAAAA,OAAO,EAAE,CAAC,WAAD,EAAc,MAAd;AAAnC,CADa,CAAD,CAFE,CAAP,CAKbT,QALa,CAAf","sourcesContent":["import React, {Fragment} from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from 'redux'\nimport { useSelector } from \"react-redux\";\nimport { useFirestoreConnect } from \"react-redux-firebase\";\n\nconst ChatRoom = ( props ) => {\n\n    // const { messages } = props;\n    // console.log(props)\n    //\n    // const list = messages && messages.map(message => {\n    //     return (\n    //         <p key={message.id}>{ message.content }</p>\n    //     );\n    // })\n\n    useFirestoreConnect([\n        { collection: 'messages'}\n    ])\n\n    const list = useSelector( (state) => state.firestore.ordered.messages)\n\n    return (\n        <Fragment>\n            <h1>ChatRoom</h1>\n            {list}\n        </Fragment>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        messages: state.firestore.ordered.messages,\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'messages', orderBy: ['createdAt', 'desc'] },\n    ])\n)(ChatRoom)"]},"metadata":{},"sourceType":"module"}