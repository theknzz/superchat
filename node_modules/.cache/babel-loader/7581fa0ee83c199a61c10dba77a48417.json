{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/joaquim/internship/superchat/src/components/ChatRoom.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport { useFirestoreConnect } from \"react-redux-firebase\";\nimport ChatMessage from './ChatMessage';\nimport { connect } from 'react-redux';\nimport { useFirebase } from 'react-redux-firebase';\nimport NewMessageFrom from \"./NewMessageForm\";\nimport styled from '@emotion/styled';\nconst MessageBox = styled.div`\n    padding: 20px;\n    overflow-y: auto;\n    max-height: 80vh;\n`;\n_c = MessageBox;\nconst Container = styled.div`\n    display: flex;\n    flex-flow: column wrap;\n`;\n_c2 = Container;\nconst Warning = styled.div`\n    display: flex;\n    color: white;\n    justify-content: center;\n    width: 100%;\n    position fixed;\n    top: 10vh;\n    & > p {\n        background-color: #bbb;\n        border-radius: 25px;\n        padding: 15px;\n        opacity: 0.8;\n        font-size: 0.7em;\n    }\n`;\n_c3 = Warning;\nconst Marker = styled.a`\n    height: 50px;\n`;\n_c4 = Marker;\n\nconst ChatRoom = ({\n  messages,\n  isIn\n}) => {\n  _s();\n\n  useFirestoreConnect([{\n    collection: 'messages',\n    orderBy: ['createAt', 'asc']\n  }]);\n  const auth = useFirebase().auth();\n  const status = auth === undefined ? 'received' : 'sent';\n  const list = messages && messages.map(message => {\n    return /*#__PURE__*/_jsxDEV(ChatMessage, {\n      content: message.content,\n      photoUrl: message.photoURL,\n      status: auth === undefined || auth.currentUser.uid !== message.uid ? 'received' : 'sent'\n    }, message.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  });\n  const marker = useRef();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [isIn ? /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 26\n      }, this) : /*#__PURE__*/_jsxDEV(Warning, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You need to sign in first!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(MessageBox, {\n        children: [list, /*#__PURE__*/_jsxDEV(Marker, {\n          ref: marker,\n          children: \"   \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NewMessageFrom, {\n        marker: marker\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(ChatRoom, \"29KqmIX7XPxgr5X5A3QLjN3ZYdw=\", false, function () {\n  return [useFirestoreConnect, useFirebase];\n});\n\n_c5 = ChatRoom;\n\nconst mapStateToProps = state => {\n  return {\n    messages: state.firestore.ordered.messages,\n    isIn: state.auth.isAuthenticated\n  };\n};\n\nexport default connect(mapStateToProps)(ChatRoom);\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"MessageBox\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Warning\");\n$RefreshReg$(_c4, \"Marker\");\n$RefreshReg$(_c5, \"ChatRoom\");","map":{"version":3,"sources":["/home/joaquim/internship/superchat/src/components/ChatRoom.js"],"names":["React","useState","useRef","useFirestoreConnect","ChatMessage","connect","useFirebase","NewMessageFrom","styled","MessageBox","div","Container","Warning","Marker","a","ChatRoom","messages","isIn","collection","orderBy","auth","status","undefined","list","map","message","content","photoURL","currentUser","uid","id","marker","mapStateToProps","state","firestore","ordered","isAuthenticated"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAuC,OAAvC;AACA,SAASC,mBAAT,QAAoC,sBAApC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAGA,MAAMC,UAAU,GAAGD,MAAM,CAACE,GAAI;AAC9B;AACA;AACA;AACA,CAJA;KAAMD,U;AAMN,MAAME,SAAS,GAAGH,MAAM,CAACE,GAAI;AAC7B;AACA;AACA,CAHA;MAAMC,S;AAKN,MAAMC,OAAO,GAAGJ,MAAM,CAACE,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;MAAME,O;AAgBN,MAAMC,MAAM,GAAGL,MAAM,CAACM,CAAE;AACxB;AACA,CAFA;MAAMD,M;;AAIN,MAAME,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAwB;AAAA;;AACrCd,EAAAA,mBAAmB,CAAC,CAChB;AAAEe,IAAAA,UAAU,EAAE,UAAd;AAA0BC,IAAAA,OAAO,EAAE,CAAC,UAAD,EAAa,KAAb;AAAnC,GADgB,CAAD,CAAnB;AAIA,QAAMC,IAAI,GAAGd,WAAW,GAAGc,IAAd,EAAb;AAEA,QAAMC,MAAM,GAAGD,IAAI,KAAKE,SAAT,GAAqB,UAArB,GAAkC,MAAjD;AACA,QAAMC,IAAI,GAAGP,QAAQ,IAAIA,QAAQ,CAACQ,GAAT,CAAaC,OAAO,IAAI;AAC7C,wBACI,QAAC,WAAD;AAEI,MAAA,OAAO,EAAEA,OAAO,CAACC,OAFrB;AAGI,MAAA,QAAQ,EAAED,OAAO,CAACE,QAHtB;AAII,MAAA,MAAM,EAAGP,IAAI,KAAKE,SAAT,IAAsBF,IAAI,CAACQ,WAAL,CAAiBC,GAAjB,KAAyBJ,OAAO,CAACI,GAAvD,GAA6D,UAA7D,GAA0E;AAJvF,OACSJ,OAAO,CAACK,EADjB;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH,GATwB,CAAzB;AAWA,QAAMC,MAAM,GAAG7B,MAAM,EAArB;AAEA,sBACI;AAAA,2BACI,QAAC,SAAD;AAAA,iBACMe,IAAI,gBAAG;AAAA;AAAA;AAAA;AAAA,cAAH,gBAAU,QAAC,OAAD;AAAA,+BAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAT;AAAA;AAAA;AAAA;AAAA,cADpB,eAEI,QAAC,UAAD;AAAA,mBACKM,IADL,eAEI,QAAC,MAAD;AAAQ,UAAA,GAAG,EAAEQ,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAMI,QAAC,cAAD;AAAgB,QAAA,MAAM,EAAEA;AAAxB;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAYH,CAjCD;;GAAMhB,Q;UACFZ,mB,EAIaG,W;;;MALXS,Q;;AAmCN,MAAMiB,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHjB,IAAAA,QAAQ,EAAEiB,KAAK,CAACC,SAAN,CAAgBC,OAAhB,CAAwBnB,QAD/B;AAEHC,IAAAA,IAAI,EAAEgB,KAAK,CAACb,IAAN,CAAWgB;AAFd,GAAP;AAIH,CALD;;AAQA,eAAe/B,OAAO,CAAC2B,eAAD,CAAP,CAAyBjB,QAAzB,CAAf","sourcesContent":["import React, { useState, useRef} from 'react'\nimport { useFirestoreConnect } from \"react-redux-firebase\";\nimport ChatMessage from './ChatMessage'\nimport { connect } from 'react-redux'\nimport { useFirebase } from 'react-redux-firebase'\nimport NewMessageFrom from \"./NewMessageForm\";\nimport styled from '@emotion/styled'\n\n\nconst MessageBox = styled.div`\n    padding: 20px;\n    overflow-y: auto;\n    max-height: 80vh;\n`\n\nconst Container = styled.div`\n    display: flex;\n    flex-flow: column wrap;\n`\n\nconst Warning = styled.div`\n    display: flex;\n    color: white;\n    justify-content: center;\n    width: 100%;\n    position fixed;\n    top: 10vh;\n    & > p {\n        background-color: #bbb;\n        border-radius: 25px;\n        padding: 15px;\n        opacity: 0.8;\n        font-size: 0.7em;\n    }\n`\n\nconst Marker = styled.a`\n    height: 50px;\n`\n\nconst ChatRoom = ({ messages, isIn }) => {\n    useFirestoreConnect([\n        { collection: 'messages', orderBy: ['createAt', 'asc']}\n    ])\n\n    const auth = useFirebase().auth();\n\n    const status = auth === undefined ? 'received' : 'sent';\n    const list = messages && messages.map(message => {\n        return (\n            <ChatMessage\n                key={message.id}\n                content={message.content}\n                photoUrl={message.photoURL}\n                status={ auth === undefined || auth.currentUser.uid !== message.uid ? 'received' : 'sent'}\n            />\n        );\n    })\n\n    const marker = useRef();\n\n    return (\n        <>\n            <Container>\n                { isIn ? <p/> : <Warning><p>You need to sign in first!</p></Warning>}\n                <MessageBox>\n                    {list}\n                    <Marker ref={marker}>   </Marker>\n                </MessageBox>\n                <NewMessageFrom marker={marker}/>\n            </Container>\n        </>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        messages: state.firestore.ordered.messages,\n        isIn: state.auth.isAuthenticated,\n    }\n}\n\n\nexport default connect(mapStateToProps)(ChatRoom)"]},"metadata":{},"sourceType":"module"}