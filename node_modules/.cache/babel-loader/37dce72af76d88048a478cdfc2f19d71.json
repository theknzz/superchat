{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/joaquim/internship/superchat/src/components/ChatRoom.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport { useFirestoreConnect } from \"react-redux-firebase\";\nimport ChatMessage from './ChatMessage';\nimport { connect } from 'react-redux';\nimport { useFirebase } from 'react-redux-firebase';\nimport { sendMessage } from '../store/actions/chatActions';\n\nconst ChatRoom = ({\n  messages,\n  send\n}) => {\n  _s();\n\n  const [input, setInput] = useState('');\n  useFirestoreConnect([{\n    collection: 'messages',\n    orderBy: ['createAt', 'asc']\n  }]);\n  const auth = useFirebase().auth();\n  const list = messages && messages.map(message => {\n    console.log(message.uid);\n    return /*#__PURE__*/_jsxDEV(ChatMessage, {\n      content: message.content,\n      photoUrl: message.photoURL,\n      status: auth.currentUser.uid === message.uid ? 'sent' : 'received'\n    }, message.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (auth.currentUser) {\n      send(input);\n      setInput('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ChatRoom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), list, /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => {\n          setInput(e.target.value);\n        },\n        value: input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !auth.currentUser,\n        children: \"click me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChatRoom, \"59smcUQdKOK2E9D2AxKNCf2a+2o=\", false, function () {\n  return [useFirestoreConnect, useFirebase];\n});\n\n_c = ChatRoom;\n\nconst mapStateToProps = state => {\n  return {\n    messages: state.firestore.ordered.messages\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    send: message => dispatch(sendMessage(message))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatRoom);\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"sources":["/home/joaquim/internship/superchat/src/components/ChatRoom.js"],"names":["React","Fragment","useState","useFirestoreConnect","ChatMessage","connect","useFirebase","sendMessage","ChatRoom","messages","send","input","setInput","collection","orderBy","auth","list","map","message","console","log","uid","content","photoURL","currentUser","id","handleSubmit","e","preventDefault","target","value","mapStateToProps","state","firestore","ordered","mapDispatchToProps","dispatch"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,QAAzB,QAAwC,OAAxC;AACA,SAASC,mBAAT,QAAoC,sBAApC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,sBAA5B;AACA,SAASC,WAAT,QAA4B,8BAA5B;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAwB;AAAA;;AAErC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,mBAAmB,CAAC,CAChB;AAAEU,IAAAA,UAAU,EAAE,UAAd;AAA0BC,IAAAA,OAAO,EAAE,CAAC,UAAD,EAAa,KAAb;AAAnC,GADgB,CAAD,CAAnB;AAIA,QAAMC,IAAI,GAAGT,WAAW,GAAGS,IAAd,EAAb;AAEA,QAAMC,IAAI,GAAGP,QAAQ,IAAIA,QAAQ,CAACQ,GAAT,CAAaC,OAAO,IAAI;AAC7CC,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACG,GAApB;AACA,wBACI,QAAC,WAAD;AAA8B,MAAA,OAAO,EAAEH,OAAO,CAACI,OAA/C;AAAwD,MAAA,QAAQ,EAAEJ,OAAO,CAACK,QAA1E;AAAoF,MAAA,MAAM,EAAER,IAAI,CAACS,WAAL,CAAiBH,GAAjB,KAAyBH,OAAO,CAACG,GAAjC,GAAuC,MAAvC,GAA+C;AAA3I,OAAkBH,OAAO,CAACO,EAA1B;AAAA;AAAA;AAAA;AAAA,YADJ;AAGH,GALwB,CAAzB;;AAOA,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIb,IAAI,CAACS,WAAT,EAAsB;AAClBd,MAAAA,IAAI,CAACC,KAAD,CAAJ;AACAC,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH;AACJ,GAND;;AAQA,sBACI,QAAC,QAAD;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKI,IAFL,eAGI;AAAM,MAAA,QAAQ,EAAEU,YAAhB;AAAA,8BACI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,QAAQ,EAAGC,CAAD,IAAO;AACbf,UAAAA,QAAQ,CAACe,CAAC,CAACE,MAAF,CAASC,KAAV,CAAR;AACH,SAJL;AAKI,QAAA,KAAK,EAAEnB;AALX;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAQ,QAAA,QAAQ,EAAE,CAACI,IAAI,CAACS,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAzCD;;GAAMhB,Q;UAIFL,mB,EAIaG,W;;;KARXE,Q;;AA2CN,MAAMuB,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHvB,IAAAA,QAAQ,EAAEuB,KAAK,CAACC,SAAN,CAAgBC,OAAhB,CAAwBzB;AAD/B,GAAP;AAGH,CAJD;;AAMA,MAAM0B,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACH1B,IAAAA,IAAI,EAAGQ,OAAD,IAAakB,QAAQ,CAAC7B,WAAW,CAACW,OAAD,CAAZ;AADxB,GAAP;AAGH,CAJD;;AAMA,eAAeb,OAAO,CAAC0B,eAAD,EAAkBI,kBAAlB,CAAP,CAA6C3B,QAA7C,CAAf","sourcesContent":["import React, {Fragment, useState} from 'react'\nimport { useFirestoreConnect } from \"react-redux-firebase\";\nimport ChatMessage from './ChatMessage'\nimport { connect } from 'react-redux'\nimport { useFirebase } from 'react-redux-firebase'\nimport { sendMessage } from '../store/actions/chatActions'\n\nconst ChatRoom = ({ messages, send }) => {\n\n    const [input, setInput] = useState('');\n\n    useFirestoreConnect([\n        { collection: 'messages', orderBy: ['createAt', 'asc']}\n    ])\n\n    const auth = useFirebase().auth();\n\n    const list = messages && messages.map(message => {\n        console.log(message.uid);\n        return (\n            <ChatMessage key={message.id} content={message.content} photoUrl={message.photoURL} status={auth.currentUser.uid === message.uid ? 'sent': 'received'}/>\n        );\n    })\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        if (auth.currentUser) {\n            send(input);\n            setInput('');\n        }\n    }\n\n    return (\n        <Fragment>\n            <h1>ChatRoom</h1>\n            {list}\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"text\"\n                    onChange={(e) => {\n                        setInput(e.target.value)\n                    }}\n                    value={input}\n                />\n                <button disabled={!auth.currentUser}>click me</button>\n            </form>\n        </Fragment>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        messages: state.firestore.ordered.messages,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        send: (message) => dispatch(sendMessage(message))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatRoom)"]},"metadata":{},"sourceType":"module"}